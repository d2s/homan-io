---
title: homan.io
subtitle: subtitle
layout: layouts/base.njk
tags:
  - nav
navtitle: About
---

<h1>About</h1>
<p>
  Opinionated developer who prefers Visual Studio Code, Vim, 2 spaces over tabs (although project consistency trumps personal preference)
</p>
<p>
  Likes good coffee, asking or answering good questions, good whiskey, and good company
</p>

<h3>Resume</h3>
<p>
  The other bullet points kind of go over my side projects more but if you just want the quick and dirty of my past work experience here is a copy of my&nbsp;
  <a href="/files/dhoman-resume.pdf">Resume</a>
</p>

<h3>Projects</h3>
<p>
  DollarGamePicks 
  <br/>
  (now defunct) was my first side project. One of my friends who I worked with used to do online sports gambling. For a dollar we'd give you a report of who we thought was going to win against the line. If we were wrong, you got another token to purchase another report.
  <br/>
  He and another wrote the database for parsing the nfl game data, I wrote the website (angular, node). This was really my first 'real' side project. But it failed miserably as none of us knew marketing.
</p>
<p>
  Frigg.io
  <br/>
  A better wedding planning app. You sign up, get a phone number tied to your event. You send everyone a message from said number (easily) and it gives them event info, help information, lets them send you photos and videos they took. 
  <br/>
  Last minute change? no problem, frigg.io lets you send updates to everyone, certain groups (ie wedding party, family, etc) of people, gather responses (ie are you going to be at the ceremony and/or reception, meal choices, etc).
  <br/>
  This is a solo project, and my current time sink
</p>


<h3>Favorite Books</h3>
<div class="visible-contrast">
  <p>
    Unsorted Books:
  </p>
  <ul>
    <li>
      An Astronaut's Guide to Life on Earth - Chris Hadfield
      <p>This was a fascinating biography by a fascinating individual. It contains a lot of practice advice as well. I could hardly put this book down. It's an enjoyable read with a lot of great lessons.</p>
    </li>
    <li>
      The Art of Happiness - Dalai Lama
    </li>
    <li>Feeding Good - David D. Burns, M.D.</li>
      <p>A self help book on depression. It helps talk common sense to you and help you identify when you are acting irrational and teaches you a lot of exercises to do to help prevent or improve ones well being.</p>
    <li>
      Just Listen - Mark Goulston
      <p>First book on interacting with people that was given to me. This book is a great book on how to deescalate people when the shit hits the fan. A lot of the advice is applicable to situations not that severe either. It is a great book.</p>
    </li>
    <li>
      Radical Candor - Kim Scott
      <p>A book primarily for managers. It explains how to best give feedback to people how to build a relationship with people where they know you care and can still provide meaningful feedback.</p>
    </li>
  </ul>
</div>
<div class="visible-contrast">
  <p>
    Programming Books:
  </p>
  <ul>
    <li>
      A Philosophy of Software Design - John Ousterhout
      <p>A great book that covers a lot of basic principles on what makes good code "good" and how to identify code smells.</p>
      <p>One of my favorite takeaways from this book is the cognitive load that is required to understand what a piece of code is doing.</p>
    </li>
    <li>
      The Design of Design - Fred Brooks
      <p>A personal favorite, in this book Brooks explores the design process. I highly enjoyed this book, it covers Agile and waterfall methods and paints a clear picture on what is required for these methods to be effective and helps explains the issues when they commonly fail.</p>
      <p>I personally believe the design process isn't given enough thought in some software shops, all the places I've worked that had high turnoff were failing at the design process and the side effects were bubbling up into all the other aspects of the teams failures.</p>
    </li>
    <li>
      The Pragmatic Programmer - Andrew Hunt, David Thomas
      <p>A classic, a great book that covers a lot of fundamentals that are now considered standard best practices</p>
    </li>
    <li>
      The Mythical Man-Month - Fred Brooks
      <p>Another classic, covers a lot of things such as estimations, team design, and common pitfalls encountered and still encountered in software design.</p>
    </li>
  </ul>
</div>
<div class="visible-contrast">
  <p>
    UX Books:
  </p>
  <ul>
    <li>
      Don't Make Me Think - Steve Krug
      <p>The first book on UX I read, and one of my favorites. It contains a lot of practical advice.</p>
    </li>
    <li>
      The Design of Everyday Things - Don Norman
      <p>A great book, I'm glad I read it, but it's definitely a bit meta or heavy for programmers. But it does a great job of explaining common UX problems, and what makes good design and what symptoms of bad design are, and how to identify when you have that on your hand.</p>
    </li>
  </ul>
</div>
